generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Student {
  id                 Int              @id @default(autoincrement())
  createdAt          DateTime         @default(now())
  updatedAt          DateTime         @updatedAt
  uuid               String           @unique
  firstName          String
  lastName           String
  email              String
  year_and_course    String
  requires_payment   Boolean          @default(true)
  paymentId          Int              @unique
  eventTierOnEventId Int
  eventTierOnEvent   EventTierOnEvent @relation(fields: [eventTierOnEventId], references: [id])
  payment            Payment          @relation(fields: [paymentId], references: [id])
}

model Payment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  photo_src String
  status    String
  student   Student?
}

model Event {
  id               Int                @id @default(autoincrement())
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  title            String             @unique
  description      String
  date             DateTime
  is_active        Boolean            @default(true)
  form_name        String
  requires_payment Boolean            @default(true)
  eventTierOnEvent EventTierOnEvent[]
}

model EventTier {
  id               Int                @id @default(autoincrement())
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  name             String
  is_active        Boolean            @default(true)
  eventTierOnEvent EventTierOnEvent[]
}

model EventTierOnEvent {
  id               Int       @id @default(autoincrement())
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  eventId          Int
  eventTierId      Int
  event            Event     @relation(fields: [eventId], references: [id])
  eventTier        EventTier @relation(fields: [eventTierId], references: [id])
  price            Float?
  max_participants Int
  students         Student[]
  is_active        Boolean   @default(true)
}

model testModel {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  firstName String
  lastName  String
}

model User {
  id             Int      @id @default(autoincrement())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  supabaseUserId String   @unique
  email          String   @unique
  userType       String
}
